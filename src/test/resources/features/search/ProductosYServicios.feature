@all
Feature: Busqueda de Productos

  @ValidCredentials
  Scenario: Inicio de sesi√≥n con credenciales v√°lidas

    Given "User" abre la p√°gina web
#    When Inicia sesi√≥n con las credenciales "Admin" y "admin123"
    When Inicia sesi√≥n con las credenciales "jmar120" y "MAYsiebel_25"
    Then Debe iniciar sesi√≥n correctamente

  @BusquedaDeProducto
  Scenario: Busqueda de producto
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con las credenciales "jmar120" y "AGTsiebel_25"
    And Ingresa al modulo de producto
    And Busca el producto "0049202724"
    Then Debe mostrar el producto "0049202724"

  @BusquedaDeProductoNoExiste
  Scenario: Busqueda de producto
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con las credenciales "jmar120" y "AGTsiebel_25"
    And Ingresa al modulo de producto
    And Busca el producto "0049202725"
    Then No debe mostrar el producto "0049202725"

  @BusquedaDeProductoCaracteresEspeciales
  Scenario: Busqueda de producto
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con las credenciales "jmar120" y "AGTsiebel_25"
    And Ingresa al modulo de producto
    And Busca el producto ".,;:"
    Then Muestra mensaje indicando caracteres invalidos

  @BusquedaDeProductosSinProducto
  Scenario: Busqueda de producto
    Given "User" abre la p√°gina web
    When Inicia sesi√≥n con las credenciales "jmar120" y "AGTsiebel_25"
    And Ingresa al modulo de producto
    And Se da click en Buscar el producto
    Then Muestra todos los productos

#üìÑ Documentaci√≥n Archivo: LoginPage.feature
#
#üìå Descripci√≥n General:
#
#Este archivo define escenarios de prueba de comportamiento (BDD) para la funcionalidad de login del sistema HRM (Human Resource Management).
# Usa el lenguaje Gherkin, lo cual permite una lectura clara y estructurada tanto para testers como para stakeholders no t√©cnicos.
#
#üéØ Prop√≥sito:
#Validar distintos comportamientos del sistema cuando un usuario intenta iniciar sesi√≥n con diferentes combinaciones de credenciales.
#‚öôÔ∏è ¬øPor qu√© se implementa?
#Se implementa para automatizar pruebas funcionales sobre el m√≥dulo de autenticaci√≥n de la aplicaci√≥n, asegurando que los mensajes y flujos de
# login se comporten correctamente con distintos tipos de entradas:
#Credenciales v√°lidas.
#Usuario inv√°lido.
#Usuario vac√≠o.
#Contrase√±a vac√≠a.
#
#üß© Estructura y Dependencias:
#
#Cada paso (Given, When, Then) est√° vinculado con m√©todos en clases Java conocidas como Step Definitions, las cuales implementan la
# l√≥gica que ejecuta lo descrito en los escenarios. Estas definiciones est√°n escritas normalmente en clases como:
#
#LoginPageDefinitions.java
#
#LoginActions.java
#
#LoginValidation.java
#
#
#Adem√°s, interact√∫a con clases de Screenplay como:
#
#Tasks ‚Üí para acciones como abrir la p√°gina o iniciar sesi√≥n.
#
#Questions ‚Üí para validar resultados esperados.
#
#UI Elements ‚Üí para ubicar campos de usuario, contrase√±a y mensajes de error.
#
#
#
#---
#
#üìö Escenarios definidos:
#
#‚úÖ @ValidCredentials
#
#Objetivo: Verificar que el usuario pueda iniciar sesi√≥n exitosamente con las credenciales correctas.
#
#‚ùå @InValidCredentials
#
#Objetivo: Validar que el sistema muestre el mensaje de error "Invalid credentials" si se ingresa un usuario o contrase√±a incorrecta.
#
#‚ö†Ô∏è @BlankUsername
#
#Objetivo: Validar que el sistema exija el nombre de usuario cuando se deja en blanco y muestre "Required" debajo del campo de usuario.
#
#‚ö†Ô∏è @BlankPassword
#
#Objetivo: Validar que el sistema exija la contrase√±a cuando se deja en blanco y muestre "Required" debajo del campo de contrase√±a.
#
#
#---
#
#üîó Clases relacionadas:
#
#Este archivo .feature depende de:
#
#LoginPageDefinitions.java ‚Üí Implementa los pasos Given, When, Then.
#
#OpenWebPage, DoLogin, ValidateErrorMessages ‚Üí Clases Task y Question que modelan la l√≥gica del login.
#
#LoginPage.java ‚Üí Clase PageObject que contiene los localizadores de elementos web.